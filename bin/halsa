#! /usr/bin/env node

const path = require('path')
const chalk = require('chalk')
const program = require('commander')
const package = require('../package')
const halsa = __dirname
const project = process.cwd()
const timestamp = require('log-timestamp')
const ora = require('ora')
const spinner = ora('please wait')
const { copySync } = require('fs-extra')

timestamp(() => {
  return `
    ${chalk.green(`[${new Date().toLocaleTimeString()}]`)}
  `.replace(' PM', '').trim()
})

const write = console.log

const info = (message) => {
  return `${chalk.cyan('[info]')} ${message}`
}
const success = (message) => {
  return `${chalk.green('[done]')} ${message}`
}
const error = (message) => {
  return `${chalk.red('[fail]')} ${message}`
}

program
  .usage('[command] [options]')
  .version(`Halsa CLI v${package.version}`, '-v, --version')

program
  .command('new')
  .usage('halsa new <project>')
  .description('Create new halsa project')
  .action((option) => {
    let directory = 'current'

    write(info(`Using Halsa CLI v${package.version}`))

    if (typeof option === 'object') {
      write(error('Please define <project name> to create project'))
      write(error(`Run ${chalk.bold('halsa --help')} to see a details`))

      process.exit(0)
    }

    if (option !== '.') {
      directory = option
    }

    const source = path.join(halsa, '../template')
    const target = path.join(project, option)

    write(info(`Create halsa project on ${chalk.bold(directory)} directory`))
    spinner.start()
    copySync(source, target)
    spinner.stop()
    write(success(`Success create project on ${chalk.bold(directory)} directory`))
  })

program
  .command('start')
  .description('Run current project directory')
  .action((option) => {
    // Something here
  })

program.parse(process.argv)

if (program.args.length === 0) {
  console.log(`
  Welcome to Halsa CLI v${package.version},
  Use ${chalk.green.bold('halsa --help')} to show help message.
  `)
}